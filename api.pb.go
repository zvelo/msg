// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: zvelo/msg/api.proto

/*
	Package msg is a generated protocol buffer package.

	zveloAPI

	It is generated from these files:
		zvelo/msg/api.proto
		zvelo/msg/category.proto
		zvelo/msg/dataset.proto
		zvelo/msg/query.proto
		zvelo/msg/seed.proto
		zvelo/msg/stream.proto

	It has these top-level messages:
		DataSet
		QueryPollRequest
		QueryStatus
		QueryResult
		QueryRequests
		QueryReply
		QueryReplies
		SeedResult
		SeedResults
		StreamResult
		StreamParams
*/
package msg

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for API service

type APIClient interface {
	// Create new query
	QueryV1(ctx context.Context, in *QueryRequests, opts ...grpc.CallOption) (*QueryReplies, error)
	// Results of active or unexpired query
	QueryResultV1(ctx context.Context, in *QueryPollRequest, opts ...grpc.CallOption) (*QueryResult, error)
}

type aPIClient struct {
	cc *grpc.ClientConn
}

func NewAPIClient(cc *grpc.ClientConn) APIClient {
	return &aPIClient{cc}
}

func (c *aPIClient) QueryV1(ctx context.Context, in *QueryRequests, opts ...grpc.CallOption) (*QueryReplies, error) {
	out := new(QueryReplies)
	err := grpc.Invoke(ctx, "/zvelo.msg.API/QueryV1", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) QueryResultV1(ctx context.Context, in *QueryPollRequest, opts ...grpc.CallOption) (*QueryResult, error) {
	out := new(QueryResult)
	err := grpc.Invoke(ctx, "/zvelo.msg.API/QueryResultV1", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for API service

type APIServer interface {
	// Create new query
	QueryV1(context.Context, *QueryRequests) (*QueryReplies, error)
	// Results of active or unexpired query
	QueryResultV1(context.Context, *QueryPollRequest) (*QueryResult, error)
}

func RegisterAPIServer(s *grpc.Server, srv APIServer) {
	s.RegisterService(&_API_serviceDesc, srv)
}

func _API_QueryV1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryRequests)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).QueryV1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zvelo.msg.API/QueryV1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).QueryV1(ctx, req.(*QueryRequests))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_QueryResultV1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryPollRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).QueryResultV1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zvelo.msg.API/QueryResultV1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).QueryResultV1(ctx, req.(*QueryPollRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _API_serviceDesc = grpc.ServiceDesc{
	ServiceName: "zvelo.msg.API",
	HandlerType: (*APIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "QueryV1",
			Handler:    _API_QueryV1_Handler,
		},
		{
			MethodName: "QueryResultV1",
			Handler:    _API_QueryResultV1_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "zvelo/msg/api.proto",
}

func init() { proto.RegisterFile("zvelo/msg/api.proto", fileDescriptorApi) }

var fileDescriptorApi = []byte{
	// 261 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xae, 0x2a, 0x4b, 0xcd,
	0xc9, 0xd7, 0xcf, 0x2d, 0x4e, 0xd7, 0x4f, 0x2c, 0xc8, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17,
	0xe2, 0x04, 0x0b, 0xea, 0xe5, 0x16, 0xa7, 0x4b, 0x89, 0x22, 0xe4, 0x0b, 0x4b, 0x53, 0x8b, 0x2a,
	0x21, 0x2a, 0xa4, 0x64, 0xd2, 0xf3, 0xf3, 0xd3, 0x73, 0x52, 0x41, 0x7a, 0xf4, 0x13, 0xf3, 0xf2,
	0xf2, 0x4b, 0x12, 0x4b, 0x32, 0xf3, 0xf3, 0x8a, 0x21, 0xb2, 0x46, 0xfb, 0x19, 0xb9, 0x98, 0x1d,
	0x03, 0x3c, 0x85, 0x82, 0xb8, 0xd8, 0x03, 0x41, 0x9a, 0xc2, 0x0c, 0x85, 0x24, 0xf4, 0xe0, 0x66,
	0xea, 0x81, 0xc5, 0x82, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x8a, 0xa5, 0xc4, 0x31, 0x65, 0x0a,
	0x72, 0x32, 0x53, 0x8b, 0x95, 0x44, 0x9a, 0x2e, 0x3f, 0x99, 0xcc, 0xc4, 0xa7, 0xc4, 0xa9, 0x5f,
	0x66, 0x08, 0xb1, 0xdc, 0x8a, 0x51, 0x4b, 0x28, 0x85, 0x8b, 0x17, 0xaa, 0xaa, 0xb8, 0x34, 0xa7,
	0x24, 0xcc, 0x50, 0x48, 0x1a, 0x5d, 0x7f, 0x40, 0x7e, 0x4e, 0x0e, 0xd4, 0x74, 0x29, 0x31, 0x4c,
	0xc3, 0x41, 0xda, 0x94, 0xe4, 0xc0, 0x66, 0x4b, 0x08, 0x89, 0xc1, 0xcd, 0xd6, 0xaf, 0x2e, 0x82,
	0xe8, 0x89, 0xcf, 0x4c, 0xa9, 0x75, 0xb2, 0xbb, 0xf0, 0x50, 0x8e, 0xe1, 0xc6, 0x43, 0x39, 0x86,
	0x07, 0x0f, 0xe5, 0x18, 0x3f, 0x3c, 0x94, 0x63, 0x6c, 0x78, 0x24, 0xc7, 0xb8, 0xe2, 0x91, 0x1c,
	0xe3, 0x89, 0x47, 0x72, 0x8c, 0x17, 0x1e, 0xc9, 0x31, 0x3e, 0x78, 0x24, 0xc7, 0xf8, 0xe2, 0x91,
	0x1c, 0xc3, 0x87, 0x47, 0x72, 0x8c, 0x13, 0x1e, 0xcb, 0x31, 0x44, 0xf1, 0x40, 0x2c, 0xca, 0x04,
	0x87, 0x55, 0x12, 0x1b, 0x38, 0x20, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0xdc, 0xd1, 0xa0,
	0x2c, 0x5f, 0x01, 0x00, 0x00,
}
