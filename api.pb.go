// Code generated by protoc-gen-gogo.
// source: zvelo/msg/api.proto
// DO NOT EDIT!

/*
	Package msg is a generated protocol buffer package.

	It is generated from these files:
		zvelo/msg/api.proto
		zvelo/msg/category.proto
		zvelo/msg/dataset.proto
		zvelo/msg/query.proto
		zvelo/msg/seed.proto
		zvelo/msg/status.proto
		zvelo/msg/stream.proto

	It has these top-level messages:
		DataSet
		QueryResultRequest
		QueryResult
		QueryURLRequests
		QueryContentRequests
		QueryReply
		QueryReplies
		SeedResult
		SeedResults
		Status
		StreamResult
		StreamParams
*/
package msg

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for API service

type APIClient interface {
	QueryURLV1(ctx context.Context, in *QueryURLRequests, opts ...grpc.CallOption) (*QueryReplies, error)
	QueryURLResultV1(ctx context.Context, in *QueryResultRequest, opts ...grpc.CallOption) (*QueryResult, error)
	QueryContentV1(ctx context.Context, in *QueryContentRequests, opts ...grpc.CallOption) (*QueryReplies, error)
	QueryContentResultV1(ctx context.Context, in *QueryResultRequest, opts ...grpc.CallOption) (*QueryResult, error)
}

type aPIClient struct {
	cc *grpc.ClientConn
}

func NewAPIClient(cc *grpc.ClientConn) APIClient {
	return &aPIClient{cc}
}

func (c *aPIClient) QueryURLV1(ctx context.Context, in *QueryURLRequests, opts ...grpc.CallOption) (*QueryReplies, error) {
	out := new(QueryReplies)
	err := grpc.Invoke(ctx, "/zvelo.msg.API/QueryURLV1", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) QueryURLResultV1(ctx context.Context, in *QueryResultRequest, opts ...grpc.CallOption) (*QueryResult, error) {
	out := new(QueryResult)
	err := grpc.Invoke(ctx, "/zvelo.msg.API/QueryURLResultV1", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) QueryContentV1(ctx context.Context, in *QueryContentRequests, opts ...grpc.CallOption) (*QueryReplies, error) {
	out := new(QueryReplies)
	err := grpc.Invoke(ctx, "/zvelo.msg.API/QueryContentV1", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) QueryContentResultV1(ctx context.Context, in *QueryResultRequest, opts ...grpc.CallOption) (*QueryResult, error) {
	out := new(QueryResult)
	err := grpc.Invoke(ctx, "/zvelo.msg.API/QueryContentResultV1", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for API service

type APIServer interface {
	QueryURLV1(context.Context, *QueryURLRequests) (*QueryReplies, error)
	QueryURLResultV1(context.Context, *QueryResultRequest) (*QueryResult, error)
	QueryContentV1(context.Context, *QueryContentRequests) (*QueryReplies, error)
	QueryContentResultV1(context.Context, *QueryResultRequest) (*QueryResult, error)
}

func RegisterAPIServer(s *grpc.Server, srv APIServer) {
	s.RegisterService(&_API_serviceDesc, srv)
}

func _API_QueryURLV1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryURLRequests)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).QueryURLV1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zvelo.msg.API/QueryURLV1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).QueryURLV1(ctx, req.(*QueryURLRequests))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_QueryURLResultV1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryResultRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).QueryURLResultV1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zvelo.msg.API/QueryURLResultV1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).QueryURLResultV1(ctx, req.(*QueryResultRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_QueryContentV1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryContentRequests)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).QueryContentV1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zvelo.msg.API/QueryContentV1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).QueryContentV1(ctx, req.(*QueryContentRequests))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_QueryContentResultV1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryResultRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).QueryContentResultV1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zvelo.msg.API/QueryContentResultV1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).QueryContentResultV1(ctx, req.(*QueryResultRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _API_serviceDesc = grpc.ServiceDesc{
	ServiceName: "zvelo.msg.API",
	HandlerType: (*APIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "QueryURLV1",
			Handler:    _API_QueryURLV1_Handler,
		},
		{
			MethodName: "QueryURLResultV1",
			Handler:    _API_QueryURLResultV1_Handler,
		},
		{
			MethodName: "QueryContentV1",
			Handler:    _API_QueryContentV1_Handler,
		},
		{
			MethodName: "QueryContentResultV1",
			Handler:    _API_QueryContentResultV1_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "zvelo/msg/api.proto",
}

func init() { proto.RegisterFile("zvelo/msg/api.proto", fileDescriptorApi) }

var fileDescriptorApi = []byte{
	// 323 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xae, 0x2a, 0x4b, 0xcd,
	0xc9, 0xd7, 0xcf, 0x2d, 0x4e, 0xd7, 0x4f, 0x2c, 0xc8, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17,
	0xe2, 0x04, 0x0b, 0xea, 0xe5, 0x16, 0xa7, 0x4b, 0x89, 0x22, 0xe4, 0x0b, 0x4b, 0x53, 0x8b, 0x2a,
	0x21, 0x2a, 0xa4, 0x64, 0xd2, 0xf3, 0xf3, 0xd3, 0x73, 0x52, 0x41, 0x7a, 0xf4, 0x13, 0xf3, 0xf2,
	0xf2, 0x4b, 0x12, 0x4b, 0x32, 0xf3, 0xf3, 0x8a, 0x21, 0xb2, 0x46, 0xbb, 0x99, 0xb9, 0x98, 0x1d,
	0x03, 0x3c, 0x85, 0xe2, 0xb8, 0xb8, 0x02, 0x41, 0x9a, 0x42, 0x83, 0x7c, 0xc2, 0x0c, 0x85, 0xa4,
	0xf5, 0xe0, 0xc6, 0xea, 0xc1, 0x84, 0x83, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x8a, 0xa5, 0xc4,
	0xd1, 0x25, 0x83, 0x52, 0x0b, 0x72, 0x32, 0x53, 0x8b, 0x95, 0xa4, 0x9a, 0x2e, 0x3f, 0x99, 0xcc,
	0x24, 0xa2, 0xc4, 0xaf, 0x5f, 0x66, 0x08, 0x76, 0x42, 0x66, 0x6a, 0xb1, 0x7e, 0x69, 0x51, 0x8e,
	0x15, 0xa3, 0x96, 0x50, 0x3e, 0x97, 0x00, 0xc2, 0xa0, 0xe2, 0xd2, 0x9c, 0x92, 0x30, 0x43, 0x21,
	0x59, 0x4c, 0x83, 0x40, 0x32, 0x50, 0x8b, 0xa4, 0xc4, 0xb0, 0x4b, 0x2b, 0xa9, 0x80, 0xad, 0x91,
	0x13, 0x92, 0x41, 0xb3, 0x46, 0xbf, 0xba, 0x08, 0xa2, 0x33, 0x3e, 0x33, 0xa5, 0x56, 0x28, 0x8b,
	0x8b, 0x0f, 0xac, 0xc9, 0x39, 0x3f, 0xaf, 0x24, 0x35, 0x0f, 0x64, 0x9d, 0x3c, 0xba, 0x79, 0x50,
	0x29, 0xc2, 0x1e, 0x93, 0x03, 0xdb, 0x28, 0xa1, 0x24, 0x8c, 0x6c, 0x63, 0x32, 0x44, 0x37, 0xc8,
	0x73, 0xe5, 0x5c, 0x22, 0xa8, 0x06, 0x52, 0xe6, 0x41, 0x0d, 0xb0, 0x75, 0x4a, 0x42, 0x0a, 0x58,
	0xac, 0x43, 0xf1, 0xa4, 0x93, 0xdd, 0x85, 0x87, 0x72, 0x0c, 0x37, 0x1e, 0xca, 0x31, 0x3c, 0x78,
	0x28, 0xc7, 0xf8, 0xe1, 0xa1, 0x1c, 0x63, 0xc3, 0x23, 0x39, 0xc6, 0x15, 0x8f, 0xe4, 0x18, 0x4f,
	0x3c, 0x92, 0x63, 0xbc, 0xf0, 0x48, 0x8e, 0xf1, 0xc1, 0x23, 0x39, 0xc6, 0x17, 0x8f, 0xe4, 0x18,
	0x3e, 0x3c, 0x92, 0x63, 0x9c, 0xf0, 0x58, 0x8e, 0x21, 0x8a, 0x07, 0x62, 0x65, 0x26, 0x38, 0x9d,
	0x24, 0xb1, 0x81, 0x13, 0x81, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x6a, 0x54, 0x50, 0xe2, 0x5b,
	0x02, 0x00, 0x00,
}
