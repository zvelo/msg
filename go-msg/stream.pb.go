// Code generated by protoc-gen-go.
// source: stream.proto
// DO NOT EDIT!

package msg

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Stream_StreamStatus int32

const (
	Stream_CREATED  Stream_StreamStatus = 0
	Stream_RUNNING  Stream_StreamStatus = 1
	Stream_PAUSED   Stream_StreamStatus = 2
	Stream_RETRYING Stream_StreamStatus = 3
	Stream_ENDED    Stream_StreamStatus = 4
	Stream_FAILED   Stream_StreamStatus = 5
)

var Stream_StreamStatus_name = map[int32]string{
	0: "CREATED",
	1: "RUNNING",
	2: "PAUSED",
	3: "RETRYING",
	4: "ENDED",
	5: "FAILED",
}
var Stream_StreamStatus_value = map[string]int32{
	"CREATED":  0,
	"RUNNING":  1,
	"PAUSED":   2,
	"RETRYING": 3,
	"ENDED":    4,
	"FAILED":   5,
}

func (x Stream_StreamStatus) String() string {
	return proto.EnumName(Stream_StreamStatus_name, int32(x))
}
func (Stream_StreamStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{2, 0} }

type StreamRequest struct {
	CustomerTrackingId string        `protobuf:"bytes,1,opt,name=customer_tracking_id,json=customerTrackingId" json:"customer_tracking_id,omitempty"`
	Endpoint           string        `protobuf:"bytes,2,opt,name=endpoint" json:"endpoint,omitempty"`
	Accept             string        `protobuf:"bytes,3,opt,name=accept" json:"accept,omitempty"`
	Dataset            []DataSetType `protobuf:"varint,4,rep,name=dataset,enum=msg.DataSetType" json:"dataset,omitempty"`
}

func (m *StreamRequest) Reset()                    { *m = StreamRequest{} }
func (m *StreamRequest) String() string            { return proto.CompactTextString(m) }
func (*StreamRequest) ProtoMessage()               {}
func (*StreamRequest) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{0} }

type StreamUpdateRequest struct {
	Uuid          string         `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	StreamRequest *StreamRequest `protobuf:"bytes,2,opt,name=stream_request,json=streamRequest" json:"stream_request,omitempty"`
}

func (m *StreamUpdateRequest) Reset()                    { *m = StreamUpdateRequest{} }
func (m *StreamUpdateRequest) String() string            { return proto.CompactTextString(m) }
func (*StreamUpdateRequest) ProtoMessage()               {}
func (*StreamUpdateRequest) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{1} }

func (m *StreamUpdateRequest) GetStreamRequest() *StreamRequest {
	if m != nil {
		return m.StreamRequest
	}
	return nil
}

type Stream struct {
	Uuid          string                     `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	StreamStatus  Stream_StreamStatus        `protobuf:"varint,2,opt,name=stream_status,json=streamStatus,enum=msg.Stream_StreamStatus" json:"stream_status,omitempty"`
	StreamRequest *StreamRequest             `protobuf:"bytes,3,opt,name=stream_request,json=streamRequest" json:"stream_request,omitempty"`
	Org           string                     `protobuf:"bytes,5,opt,name=org" json:"org,omitempty"`
	User          string                     `protobuf:"bytes,6,opt,name=user" json:"user,omitempty"`
	CreationDate  *google_protobuf.Timestamp `protobuf:"bytes,7,opt,name=creation_date,json=creationDate" json:"creation_date,omitempty"`
}

func (m *Stream) Reset()                    { *m = Stream{} }
func (m *Stream) String() string            { return proto.CompactTextString(m) }
func (*Stream) ProtoMessage()               {}
func (*Stream) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{2} }

func (m *Stream) GetStreamRequest() *StreamRequest {
	if m != nil {
		return m.StreamRequest
	}
	return nil
}

func (m *Stream) GetCreationDate() *google_protobuf.Timestamp {
	if m != nil {
		return m.CreationDate
	}
	return nil
}

type StreamReply struct {
	Status *Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Stream *Stream `protobuf:"bytes,2,opt,name=stream" json:"stream,omitempty"`
}

func (m *StreamReply) Reset()                    { *m = StreamReply{} }
func (m *StreamReply) String() string            { return proto.CompactTextString(m) }
func (*StreamReply) ProtoMessage()               {}
func (*StreamReply) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{3} }

func (m *StreamReply) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *StreamReply) GetStream() *Stream {
	if m != nil {
		return m.Stream
	}
	return nil
}

func init() {
	proto.RegisterType((*StreamRequest)(nil), "msg.StreamRequest")
	proto.RegisterType((*StreamUpdateRequest)(nil), "msg.StreamUpdateRequest")
	proto.RegisterType((*Stream)(nil), "msg.Stream")
	proto.RegisterType((*StreamReply)(nil), "msg.StreamReply")
	proto.RegisterEnum("msg.Stream_StreamStatus", Stream_StreamStatus_name, Stream_StreamStatus_value)
}

var fileDescriptor5 = []byte{
	// 438 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x52, 0x41, 0x8f, 0x93, 0x40,
	0x18, 0x95, 0xd2, 0xd2, 0xdd, 0x8f, 0xb6, 0x69, 0x3e, 0x8d, 0x99, 0xf4, 0xe2, 0x06, 0x2f, 0x1b,
	0x0f, 0xac, 0xa9, 0x27, 0x0f, 0xc6, 0x34, 0x16, 0x4d, 0x13, 0x43, 0xcc, 0x40, 0x63, 0xf6, 0x44,
	0x58, 0x18, 0x09, 0x71, 0x61, 0x10, 0x86, 0xc3, 0xfe, 0x1c, 0xff, 0x95, 0x3f, 0xc7, 0x61, 0x66,
	0xd8, 0x60, 0xb2, 0x07, 0x4f, 0x7c, 0x6f, 0xde, 0x9b, 0x97, 0xf7, 0x3d, 0x06, 0x56, 0x9d, 0x68,
	0x59, 0x5a, 0xf9, 0x4d, 0xcb, 0x05, 0x47, 0xbb, 0xea, 0x8a, 0xdd, 0x3a, 0x4f, 0x45, 0xda, 0x31,
	0xa1, 0xcf, 0x76, 0x52, 0x91, 0x8a, 0xbe, 0x33, 0xe8, 0x55, 0xc1, 0x79, 0x71, 0xcf, 0x6e, 0x14,
	0xba, 0xeb, 0x7f, 0xdc, 0x88, 0xb2, 0x62, 0x52, 0x51, 0x35, 0x5a, 0xe0, 0xfd, 0xb6, 0x60, 0x1d,
	0x29, 0x4f, 0xca, 0x7e, 0xf5, 0x92, 0xc2, 0xb7, 0xf0, 0x22, 0xeb, 0x3b, 0xc1, 0x2b, 0xd6, 0x26,
	0xa2, 0x4d, 0xb3, 0x9f, 0x65, 0x5d, 0x24, 0x65, 0x4e, 0xac, 0x2b, 0xeb, 0xfa, 0x92, 0xe2, 0xc8,
	0xc5, 0x86, 0x3a, 0xe5, 0xb8, 0x83, 0x0b, 0x56, 0xe7, 0x0d, 0x2f, 0x6b, 0x41, 0x66, 0x4a, 0xf5,
	0x88, 0xf1, 0x25, 0x38, 0x69, 0x96, 0xb1, 0x46, 0x10, 0x5b, 0x31, 0x06, 0xe1, 0x1b, 0x58, 0x9a,
	0xdc, 0x64, 0x7e, 0x65, 0x5f, 0x6f, 0xf6, 0x5b, 0x5f, 0x2e, 0xe3, 0x1f, 0xe5, 0x59, 0xc4, 0x44,
	0xfc, 0xd0, 0x30, 0x3a, 0x0a, 0xbc, 0x1c, 0x9e, 0xeb, 0x88, 0xe7, 0x46, 0x1e, 0xb1, 0x31, 0x28,
	0xc2, 0xbc, 0xef, 0x1f, 0x83, 0xa9, 0x19, 0xdf, 0xc3, 0x46, 0x37, 0x94, 0xb4, 0x5a, 0xa5, 0x02,
	0xb9, 0x7b, 0x54, 0xee, 0xff, 0x2c, 0x4a, 0xd7, 0xdd, 0x14, 0x7a, 0x7f, 0x66, 0xe0, 0x68, 0xc1,
	0x93, 0xce, 0x1f, 0xc0, 0xe8, 0x13, 0x5d, 0xb0, 0x32, 0xde, 0xec, 0xc9, 0xc4, 0xd8, 0x7c, 0x22,
	0xc5, 0x53, 0xf3, 0xab, 0x34, 0x7a, 0x22, 0x98, 0xfd, 0x9f, 0xc1, 0x70, 0x0b, 0x36, 0x6f, 0x0b,
	0xb2, 0x50, 0x61, 0x86, 0x51, 0xe5, 0xeb, 0x58, 0x4b, 0x1c, 0x93, 0x4f, 0xce, 0xf8, 0x11, 0xd6,
	0x99, 0xbc, 0x25, 0x4a, 0x5e, 0x27, 0x43, 0x4b, 0x64, 0xa9, 0xfc, 0x77, 0xbe, 0x7e, 0x01, 0xfe,
	0xf8, 0x02, 0xfc, 0x78, 0x7c, 0x01, 0x74, 0x35, 0x5e, 0x90, 0xad, 0x33, 0xef, 0x16, 0x56, 0xd3,
	0xfc, 0xe8, 0xc2, 0xf2, 0x13, 0x0d, 0x0e, 0x71, 0x70, 0xdc, 0x3e, 0x1b, 0x00, 0x3d, 0x87, 0xe1,
	0x29, 0xfc, 0xb2, 0xb5, 0x10, 0xc0, 0xf9, 0x76, 0x38, 0x47, 0x92, 0x98, 0xe1, 0x0a, 0x2e, 0x68,
	0x10, 0xd3, 0xdb, 0x81, 0xb1, 0xf1, 0x12, 0x16, 0x41, 0x78, 0x94, 0xc4, 0x7c, 0x10, 0x7d, 0x3e,
	0x9c, 0xbe, 0xca, 0x79, 0xe1, 0x7d, 0x07, 0x77, 0xdc, 0xb0, 0xb9, 0x7f, 0xc0, 0xd7, 0xe0, 0x98,
	0x0e, 0x2d, 0x95, 0xd1, 0x35, 0x1d, 0xa8, 0xda, 0x0c, 0xa5, 0x45, 0xc3, 0x1d, 0xf3, 0x07, 0xdd,
	0x69, 0x51, 0x86, 0xba, 0x73, 0xd4, 0x56, 0xef, 0xfe, 0x06, 0x00, 0x00, 0xff, 0xff, 0x4f, 0xe7,
	0xd4, 0x33, 0x17, 0x03, 0x00, 0x00,
}
