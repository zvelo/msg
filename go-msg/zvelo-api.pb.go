// Code generated by protoc-gen-go.
// source: zvelo-api.proto
// DO NOT EDIT!

package msg

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type QueryURLRequests struct {
	Url            []string      `protobuf:"bytes,1,rep,name=url" json:"url,omitempty"`
	Dataset        []DataSetType `protobuf:"varint,2,rep,name=dataset,enum=msg.DataSetType" json:"dataset,omitempty"`
	Callback       string        `protobuf:"bytes,3,opt,name=callback" json:"callback,omitempty"`
	Poll           bool          `protobuf:"varint,4,opt,name=poll" json:"poll,omitempty"`
	PartialResults bool          `protobuf:"varint,5,opt,name=partial_results" json:"partial_results,omitempty"`
	Accept         string        `protobuf:"bytes,6,opt,name=accept" json:"accept,omitempty"`
}

func (m *QueryURLRequests) Reset()                    { *m = QueryURLRequests{} }
func (m *QueryURLRequests) String() string            { return proto.CompactTextString(m) }
func (*QueryURLRequests) ProtoMessage()               {}
func (*QueryURLRequests) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

type QueryContentRequests struct {
	Content        []*QueryContentRequests_URLContent `protobuf:"bytes,1,rep,name=content" json:"content,omitempty"`
	Dataset        []DataSetType                      `protobuf:"varint,2,rep,name=dataset,enum=msg.DataSetType" json:"dataset,omitempty"`
	Callback       string                             `protobuf:"bytes,3,opt,name=callback" json:"callback,omitempty"`
	Poll           bool                               `protobuf:"varint,4,opt,name=poll" json:"poll,omitempty"`
	PartialResults bool                               `protobuf:"varint,5,opt,name=partial_results" json:"partial_results,omitempty"`
	Accept         string                             `protobuf:"bytes,6,opt,name=accept" json:"accept,omitempty"`
}

func (m *QueryContentRequests) Reset()                    { *m = QueryContentRequests{} }
func (m *QueryContentRequests) String() string            { return proto.CompactTextString(m) }
func (*QueryContentRequests) ProtoMessage()               {}
func (*QueryContentRequests) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{1} }

func (m *QueryContentRequests) GetContent() []*QueryContentRequests_URLContent {
	if m != nil {
		return m.Content
	}
	return nil
}

type QueryContentRequests_URLContent struct {
	// Use a unique id if content has no url, to link response to request.
	Id      string            `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Url     string            `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	Header  map[string]string `protobuf:"bytes,3,rep,name=header" json:"header,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Content string            `protobuf:"bytes,4,opt,name=content" json:"content,omitempty"`
}

func (m *QueryContentRequests_URLContent) Reset()         { *m = QueryContentRequests_URLContent{} }
func (m *QueryContentRequests_URLContent) String() string { return proto.CompactTextString(m) }
func (*QueryContentRequests_URLContent) ProtoMessage()    {}
func (*QueryContentRequests_URLContent) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{1, 0}
}

func (m *QueryContentRequests_URLContent) GetHeader() map[string]string {
	if m != nil {
		return m.Header
	}
	return nil
}

type QueryReply struct {
	Status    *Status  `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	RequestId [][]byte `protobuf:"bytes,2,rep,name=request_id,proto3" json:"request_id,omitempty"`
	// the target of QueryStatus, to ensure that the QueryStatus call
	// goes to the same cluster as the original call.
	// Will only be set if user set p=true in request.
	StatusUrl string `protobuf:"bytes,3,opt,name=status_url" json:"status_url,omitempty"`
}

func (m *QueryReply) Reset()                    { *m = QueryReply{} }
func (m *QueryReply) String() string            { return proto.CompactTextString(m) }
func (*QueryReply) ProtoMessage()               {}
func (*QueryReply) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{2} }

func (m *QueryReply) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func init() {
	proto.RegisterType((*QueryURLRequests)(nil), "msg.QueryURLRequests")
	proto.RegisterType((*QueryContentRequests)(nil), "msg.QueryContentRequests")
	proto.RegisterType((*QueryContentRequests_URLContent)(nil), "msg.QueryContentRequests.URLContent")
	proto.RegisterType((*QueryReply)(nil), "msg.QueryReply")
}

var fileDescriptor3 = []byte{
	// 350 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xbc, 0x52, 0xcd, 0x4a, 0xc3, 0x40,
	0x10, 0x26, 0x49, 0x9b, 0xd6, 0x49, 0xff, 0x58, 0x04, 0x43, 0xbd, 0xd4, 0xe2, 0xc1, 0x4b, 0x83,
	0x54, 0x04, 0xf1, 0x24, 0xa8, 0xe0, 0xc1, 0x4b, 0x5b, 0x3d, 0x97, 0x6d, 0x3a, 0x68, 0xe9, 0xda,
	0xac, 0xbb, 0x9b, 0x42, 0x7c, 0x05, 0x1f, 0xc4, 0x07, 0xf3, 0x45, 0xdc, 0xcc, 0x06, 0xed, 0xc1,
	0x83, 0x27, 0x8f, 0xf3, 0xed, 0x7e, 0xf3, 0xfd, 0x30, 0xd0, 0x7d, 0xdb, 0xa2, 0xc8, 0x46, 0x5c,
	0xae, 0x12, 0xa9, 0x32, 0x93, 0xb1, 0xe0, 0x45, 0x3f, 0xf5, 0xdb, 0x4b, 0x6e, 0xb8, 0x46, 0xe3,
	0xb0, 0x7e, 0x4b, 0x1b, 0x6e, 0x72, 0xed, 0xa6, 0xe1, 0xbb, 0x07, 0xbd, 0x49, 0x8e, 0xaa, 0x78,
	0x9c, 0xde, 0x4f, 0xf1, 0x35, 0x47, 0x6d, 0x34, 0x8b, 0x20, 0xc8, 0x95, 0x88, 0xbd, 0x41, 0x70,
	0xb2, 0xc7, 0x8e, 0xa0, 0x51, 0x2d, 0x88, 0x7d, 0x0b, 0x74, 0xc6, 0xbd, 0xc4, 0x6e, 0x4d, 0x6e,
	0x2c, 0x36, 0x43, 0xf3, 0x50, 0x48, 0x64, 0x3d, 0x68, 0xa6, 0x5c, 0x88, 0x05, 0x4f, 0xd7, 0x71,
	0x30, 0xf0, 0x2c, 0xa9, 0x05, 0x35, 0x99, 0x09, 0x11, 0xd7, 0xec, 0xd4, 0x64, 0x07, 0xd0, 0x95,
	0x5c, 0x99, 0x15, 0x17, 0x73, 0x85, 0x3a, 0x17, 0x46, 0xc7, 0x75, 0x7a, 0xe8, 0x40, 0xc8, 0xd3,
	0x14, 0xa5, 0x89, 0xc3, 0x92, 0x36, 0xfc, 0xf4, 0x61, 0x9f, 0xdc, 0x5c, 0x67, 0x1b, 0x83, 0x1b,
	0xf3, 0xed, 0xe8, 0x1c, 0x1a, 0xa9, 0x83, 0xc8, 0x55, 0x34, 0x3e, 0x26, 0x13, 0xbf, 0xfd, 0x4d,
	0x6c, 0x92, 0x0a, 0xfa, 0x4f, 0xef, 0xfd, 0x0f, 0x0f, 0x60, 0x47, 0x1a, 0xc0, 0x5f, 0x2d, 0xad,
	0xd9, 0x72, 0x63, 0xd5, 0xa7, 0x4f, 0xc3, 0x15, 0x84, 0xcf, 0xc8, 0x97, 0xa8, 0xac, 0x5c, 0x99,
	0xe4, 0xf4, 0x2f, 0x49, 0x92, 0x3b, 0xa2, 0xdc, 0x6e, 0x8c, 0x2a, 0x58, 0xf7, 0xa7, 0x8c, 0x1a,
	0x49, 0x8f, 0x20, 0xda, 0x7d, 0xb7, 0x72, 0x6b, 0x2c, 0x2a, 0xed, 0x36, 0xd4, 0xb7, 0x5c, 0xe4,
	0xe8, 0xd4, 0x2f, 0xfd, 0x0b, 0x6f, 0x38, 0x01, 0x20, 0xb9, 0x29, 0x4a, 0x51, 0xb0, 0x43, 0x08,
	0xdd, 0x45, 0x10, 0x21, 0x1a, 0x47, 0xe4, 0x67, 0x46, 0x10, 0xb3, 0x31, 0x94, 0x73, 0x33, 0xb7,
	0x69, 0xca, 0x0e, 0x5b, 0x25, 0xe6, 0x08, 0xf3, 0x32, 0x14, 0x75, 0xb6, 0x08, 0xe9, 0x9a, 0xce,
	0xbe, 0x02, 0x00, 0x00, 0xff, 0xff, 0x65, 0x95, 0x77, 0xcc, 0x82, 0x02, 0x00, 0x00,
}
