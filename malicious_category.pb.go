// Code generated by protoc-gen-go.
// source: zvelo/msg/malicious_category.proto
// DO NOT EDIT!

package msg

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type MaliciousCategory int32

const (
	MaliciousCategory_SKIP    MaliciousCategory = 0
	MaliciousCategory_BOTS    MaliciousCategory = 10293
	MaliciousCategory_CANDC   MaliciousCategory = 10294
	MaliciousCategory_COMPR   MaliciousCategory = 10295
	MaliciousCategory_MALHOME MaliciousCategory = 10296
	MaliciousCategory_MAL     MaliciousCategory = 10297
	MaliciousCategory_FRAUD   MaliciousCategory = 10298
	MaliciousCategory_SPAM    MaliciousCategory = 10299
	MaliciousCategory_SPYWARE MaliciousCategory = 10300
	MaliciousCategory_UNK     MaliciousCategory = -1
)

var MaliciousCategory_name = map[int32]string{
	0:     "SKIP",
	10293: "BOTS",
	10294: "CANDC",
	10295: "COMPR",
	10296: "MALHOME",
	10297: "MAL",
	10298: "FRAUD",
	10299: "SPAM",
	10300: "SPYWARE",
	-1:    "UNK",
}
var MaliciousCategory_value = map[string]int32{
	"SKIP":    0,
	"BOTS":    10293,
	"CANDC":   10294,
	"COMPR":   10295,
	"MALHOME": 10296,
	"MAL":     10297,
	"FRAUD":   10298,
	"SPAM":    10299,
	"SPYWARE": 10300,
	"UNK":     -1,
}

func (x MaliciousCategory) String() string {
	return proto.EnumName(MaliciousCategory_name, int32(x))
}
func (MaliciousCategory) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func init() {
	proto.RegisterEnum("msg.MaliciousCategory", MaliciousCategory_name, MaliciousCategory_value)
}

func init() { proto.RegisterFile("zvelo/msg/malicious_category.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 198 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x52, 0xaa, 0x2a, 0x4b, 0xcd,
	0xc9, 0xd7, 0xcf, 0x2d, 0x4e, 0xd7, 0xcf, 0x4d, 0xcc, 0xc9, 0x4c, 0xce, 0xcc, 0x2f, 0x2d, 0x8e,
	0x4f, 0x4e, 0x2c, 0x49, 0x4d, 0xcf, 0x2f, 0xaa, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62,
	0xce, 0x2d, 0x4e, 0xd7, 0xea, 0x67, 0xe4, 0x12, 0xf4, 0x85, 0xa9, 0x70, 0x86, 0x2a, 0x10, 0xe2,
	0xe0, 0x62, 0x09, 0xf6, 0xf6, 0x0c, 0x10, 0x60, 0x10, 0xe2, 0xe4, 0x62, 0x71, 0xf2, 0x0f, 0x09,
	0x16, 0xd8, 0x1a, 0x20, 0xc4, 0xc5, 0xc5, 0xea, 0xec, 0xe8, 0xe7, 0xe2, 0x2c, 0xb0, 0x0d, 0xc2,
	0xf6, 0xf7, 0x0d, 0x08, 0x12, 0xd8, 0x1e, 0x20, 0xc4, 0xc3, 0xc5, 0xee, 0xeb, 0xe8, 0xe3, 0xe1,
	0xef, 0xeb, 0x2a, 0xb0, 0x23, 0x40, 0x88, 0x83, 0x8b, 0xd9, 0xd7, 0xd1, 0x47, 0x60, 0x27, 0x58,
	0x8d, 0x5b, 0x90, 0x63, 0xa8, 0x8b, 0xc0, 0xae, 0x00, 0x90, 0x31, 0xc1, 0x01, 0x8e, 0xbe, 0x02,
	0xbb, 0xc1, 0xca, 0x83, 0x03, 0x22, 0xc3, 0x1d, 0x83, 0x5c, 0x05, 0xf6, 0x04, 0x08, 0x09, 0x70,
	0x31, 0x87, 0xfa, 0x79, 0x0b, 0xfc, 0x87, 0x01, 0x46, 0x27, 0xbe, 0x28, 0x1e, 0xb0, 0xe3, 0xf5,
	0x32, 0xc1, 0xee, 0x4f, 0x62, 0x03, 0xbb, 0xd6, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0xd0, 0xa8,
	0x87, 0xad, 0xd3, 0x00, 0x00, 0x00,
}
