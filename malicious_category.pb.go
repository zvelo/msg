// Code generated by protoc-gen-go.
// source: zvelo/msg/malicious_category.proto
// DO NOT EDIT!

package msg

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type MaliciousCategory int32

const (
	MaliciousCategory_T_SKIP      MaliciousCategory = 0
	MaliciousCategory_T_BOTS_4    MaliciousCategory = 10293
	MaliciousCategory_T_CANDC_4   MaliciousCategory = 10294
	MaliciousCategory_T_COMPR_4   MaliciousCategory = 10295
	MaliciousCategory_T_MALHOME_4 MaliciousCategory = 10296
	MaliciousCategory_T_MAL_4     MaliciousCategory = 10297
	MaliciousCategory_T_FRAUD_4   MaliciousCategory = 10298
	MaliciousCategory_T_SPAM_4    MaliciousCategory = 10299
	MaliciousCategory_T_SPYWARE_4 MaliciousCategory = 10300
	MaliciousCategory_T_UNKNOWN   MaliciousCategory = -1
)

var MaliciousCategory_name = map[int32]string{
	0:     "T_SKIP",
	10293: "T_BOTS_4",
	10294: "T_CANDC_4",
	10295: "T_COMPR_4",
	10296: "T_MALHOME_4",
	10297: "T_MAL_4",
	10298: "T_FRAUD_4",
	10299: "T_SPAM_4",
	10300: "T_SPYWARE_4",
	-1:    "T_UNKNOWN",
}
var MaliciousCategory_value = map[string]int32{
	"T_SKIP":      0,
	"T_BOTS_4":    10293,
	"T_CANDC_4":   10294,
	"T_COMPR_4":   10295,
	"T_MALHOME_4": 10296,
	"T_MAL_4":     10297,
	"T_FRAUD_4":   10298,
	"T_SPAM_4":    10299,
	"T_SPYWARE_4": 10300,
	"T_UNKNOWN":   -1,
}

func (x MaliciousCategory) String() string {
	return proto.EnumName(MaliciousCategory_name, int32(x))
}
func (MaliciousCategory) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func init() {
	proto.RegisterEnum("msg.MaliciousCategory", MaliciousCategory_name, MaliciousCategory_value)
}

func init() { proto.RegisterFile("zvelo/msg/malicious_category.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 223 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x52, 0xaa, 0x2a, 0x4b, 0xcd,
	0xc9, 0xd7, 0xcf, 0x2d, 0x4e, 0xd7, 0xcf, 0x4d, 0xcc, 0xc9, 0x4c, 0xce, 0xcc, 0x2f, 0x2d, 0x8e,
	0x4f, 0x4e, 0x2c, 0x49, 0x4d, 0xcf, 0x2f, 0xaa, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62,
	0xce, 0x2d, 0x4e, 0xd7, 0xda, 0xce, 0xc8, 0x25, 0xe8, 0x0b, 0x53, 0xe1, 0x0c, 0x55, 0x20, 0xc4,
	0xc5, 0xc5, 0x16, 0x12, 0x1f, 0xec, 0xed, 0x19, 0x20, 0xc0, 0x20, 0xc4, 0xcb, 0xc5, 0x11, 0x12,
	0xef, 0xe4, 0x1f, 0x12, 0x1c, 0x6f, 0x22, 0xb0, 0x35, 0x40, 0x88, 0x8f, 0x8b, 0x33, 0x24, 0xde,
	0xd9, 0xd1, 0xcf, 0xc5, 0x39, 0xde, 0x44, 0x60, 0x1b, 0x8c, 0xef, 0xef, 0x1b, 0x10, 0x14, 0x6f,
	0x22, 0xb0, 0x3d, 0x40, 0x48, 0x80, 0x8b, 0x3b, 0x24, 0xde, 0xd7, 0xd1, 0xc7, 0xc3, 0xdf, 0xd7,
	0x35, 0xde, 0x44, 0x60, 0x47, 0x80, 0x10, 0x0f, 0x17, 0x3b, 0x58, 0x24, 0xde, 0x44, 0x60, 0x27,
	0x54, 0xbd, 0x5b, 0x90, 0x63, 0xa8, 0x4b, 0xbc, 0x89, 0xc0, 0xae, 0x00, 0x88, 0xf1, 0xc1, 0x01,
	0x8e, 0xbe, 0xf1, 0x26, 0x02, 0xbb, 0xa1, 0xda, 0x83, 0x03, 0x22, 0xc3, 0x1d, 0x83, 0x40, 0xda,
	0xf7, 0x04, 0x08, 0x89, 0x81, 0x34, 0x84, 0xfa, 0x79, 0xfb, 0xf9, 0x87, 0xfb, 0x09, 0xfc, 0x87,
	0x01, 0x46, 0x27, 0xbe, 0x28, 0x1e, 0xb0, 0x27, 0xf5, 0x32, 0xc1, 0xfe, 0x4c, 0x62, 0x03, 0xfb,
	0xca, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x7c, 0x3e, 0x55, 0x05, 0xfb, 0x00, 0x00, 0x00,
}
